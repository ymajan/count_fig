#+TITLE: Count Fig Documentation
#+AUTHOR: Jaynams Ahh
#+DATE: April 2, 2025
#+OPTIONS: toc:2 num:t

* Overview

Count Fig is a personal configuration repository that contains dotfiles, system configurations, and various customizations for:

- Doom Emacs configuration
- GNU Guix system and home configurations
- macOS environment settings

This documentation provides an overview of the repository structure and how to use the various components.

* Repository Structure

The repository is organized into several main directories:

- ~dots/~ - Contains dotfiles, primarily focused on Doom Emacs configuration
- ~geeks/~ - Contains GNU Guix system and home configuration files
- ~macos/~ - Contains macOS-specific configuration files
- ~docs/~ - Documentation (this directory)

* Installation and Setup

** GNU Guix System Configuration
The repository includes both system-wide and user-specific Guix configurations.

*** System Configuration
To set up the system configuration:

#+BEGIN_SRC shell
# Create symlink for system configuration
cd /etc
sudo ln -s /home/ymajan/count_fig/geeks/system.scm config.scm

# Create symlink for system channels
cd /etc/guix
sudo ln -s /home/ymajan/count_fig/geeks/system-channels.scm channels.scm

# Reconfigure the system
sudo guix system reconfigure /etc/config.scm
#+END_SRC

*** Home Configuration
For user-specific Guix home configuration:

#+BEGIN_SRC shell
# Create symlink for home channels
mkdir -p ~/.config/guix
ln -s ~/count_fig/geeks/home-channels.scm ~/.config/guix/channels.scm

# Reconfigure the home environment
guix home reconfigure ~/count_fig/geeks/home.scm
#+END_SRC

** macOS Configuration
For macOS systems:

#+BEGIN_SRC shell
# Create symlink for zprofile
ln -s ~/count_fig/macos/zprofile ~/.zprofile
#+END_SRC

** Doom Emacs Configuration
The repository includes a comprehensive Doom Emacs configuration:

#+BEGIN_SRC shell
# Set DOOMDIR environment variable to point to this configuration
export DOOMDIR="$HOME/count_fig/dots/doom"

# Add to your shell configuration
echo 'export DOOMDIR="$HOME/count_fig/dots/doom"' >> ~/.zshrc

# Sync Doom Emacs to apply configuration
$HOME/.config/emacs/bin/doom sync
#+END_SRC

* Components

** Doom Emacs Configuration
The Doom Emacs configuration includes:

- Org-mode customizations for notes, tasks, and academic work
- Reference management with Citar and Zotero integration
- Note-taking system based on Org-roam
- Calendar sync with org-caldav
- MacOS-specific modifier key configurations

** GNU Guix Configuration
The Guix configurations include:

- System-wide packages and services
- Development environment setup
- Custom channels for additional packages
- Desktop environment configuration (GNOME)
- Power management settings

** MacOS Configuration
The macOS configuration sets up:

- Homebrew environment 
- Conda environment
- Direnv integration
- Doom Emacs path configuration
- Guile development environment

* Usage

** Org-Mode Workflow
The Org-mode configuration is set up for:

- Task management with GTD methodology
- Daily journaling with org-journal
- Knowledge management with org-roam
- Bibliography management with citar and Zotero
- Calendar synchronization with org-caldav

** Managing Dotfiles
When making changes to your configuration:

1. Edit the appropriate files in the repository
2. Commit your changes to version control
3. For Doom Emacs: run ~doom sync~
4. For Guix system: run ~sudo guix system reconfigure /etc/config.scm~
5. For Guix home: run ~guix home reconfigure ~/count_fig/geeks/home.scm~

* Maintenance

** Updating Guix Channels
Update all Guix channels with:

#+BEGIN_SRC shell
guix pull
#+END_SRC

** Updating Doom Emacs
Update Doom Emacs with:

#+BEGIN_SRC shell
$HOME/.config/emacs/bin/doom upgrade
#+END_SRC

* Publishing This Documentation
To publish this documentation to GitHub Pages:

#+BEGIN_SRC emacs-lisp
(require 'ox-publish)
(setq org-publish-project-alist
      '(("count-fig-docs"
         :base-directory "~/count_fig/docs/"
         :base-extension "org"
         :publishing-directory "~/count_fig/docs/html/"
         :recursive t
         :publishing-function org-html-publish-to-html
         :headline-levels 4
         :auto-preamble t
         :section-numbers nil
         :author "Jaynams Ahh"
         :email ""
         :auto-sitemap t
         :sitemap-filename "sitemap.org"
         :sitemap-title "Sitemap"
         :sitemap-sort-files anti-chronologically
         :sitemap-file-entry-format "%t")))
#+END_SRC

Run ~M-x org-publish-project~ and select "count-fig-docs" to generate HTML files.
