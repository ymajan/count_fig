#+TITLE: macOS Configuration
#+AUTHOR: Jaynams Ahh
#+DATE: April 2, 2025
#+OPTIONS: toc:2 num:t

* Overview

This document describes the macOS-specific configuration in Count Fig. While much of the repository focuses on GNU/Linux with Guix, the macOS configuration allows for a consistent environment across platforms.

* Prerequisites

Before setting up this configuration, ensure you have installed:

- [[https://brew.sh/][Homebrew]] - The package manager for macOS
- [[https://github.com/doomemacs/doomemacs][Doom Emacs]] - The Emacs distribution
- [[https://direnv.net/][direnv]] - For directory-specific environment variables
- [[https://docs.conda.io/en/latest/miniconda.html][Conda]] - For Python environment management
- [[https://www.gnu.org/software/guile/][Guile]] - GNU Scheme implementation

* Shell Configuration (zprofile)

The primary macOS configuration file is ~zprofile~, which sets up environment variables and initializes various tools.

** Key Components

#+BEGIN_SRC shell
# Homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"\

# Conda
eval "$(conda "shell.$(basename "${SHELL}")" hook)"

# Direnv
eval "$(direnv hook zsh)"

# Doom Emacs
export PATH="$HOME/.config/emacs/bin:$PATH"
export DOOMDIR="$HOME/count_fig/dots/doom"

# Guile Paths
export GUILE_LOAD_PATH="/opt/homebrew/share/guile/site/3.0"
export GUILE_LOAD_COMPILED_PATH="/opt/homebrew/lib/guile/3.0/site-ccache"
export GUILE_SYSTEM_EXTENSIONS_PATH="/opt/homebrew/lib/guile/3.0/extensions"

export GUILE_LOAD_PATH=$GUILE_LOAD_PATH:/usr/local/share/guile/site/3.0/
export GUILE_LOAD_COMPILED_PATH=$GUILE_LOAD_COMPILED_PATH:/usr/local/lib/guile/3.0/site-ccache/
export GUILE_SYSTEM_EXTENSIONS_PATH=$GUILE_SYSTEM_EXTENSIONS_PATH:/usr/local/lib/guile/3.0/extensions
export PATH=/usr/local/bin:$PATH
#+END_SRC

* Environment Integration

The macOS configuration focuses on integrating key components:

** Homebrew

The configuration initializes Homebrew, which is used for package management on macOS.

** Conda

Conda is initialized for Python environment management, which complements the Python configuration in the Doom Emacs setup.

** Direnv

Direnv is set up to allow for directory-specific environment variables, which is useful for development projects.

** Doom Emacs

The configuration ensures that Doom Emacs is properly initialized with:
- Adding the Doom Emacs binary directory to the PATH
- Setting the DOOMDIR environment variable to point to the custom Doom configuration in this repository

** Guile

Guile paths are configured to enable Scheme development on macOS, providing a consistent environment with the GNU Guix configuration on Linux.

* Installation

To set up the macOS configuration:

#+BEGIN_SRC shell
# Create symbolic link to zprofile
ln -s ~/count_fig/macos/zprofile ~/.zprofile

# Reload the profile
source ~/.zprofile
#+END_SRC

* Doom Emacs Integration

The macOS configuration is designed to work seamlessly with the Doom Emacs configuration in this repository:

1. The ~zprofile~ adds the Doom Emacs binary directory to your PATH
2. It sets the ~DOOMDIR~ environment variable to point to your custom configuration
3. This ensures that Doom Emacs uses all the custom modules defined in the repository

After installing, run:

#+BEGIN_SRC shell
# Sync Doom Emacs with your configuration
~/.config/emacs/bin/doom sync
#+END_SRC

* Additional Configuration

## Nextcloud Integration

For authinfo, the README suggests the following syntax for Nextcloud access (needed for org-caldav):

#+BEGIN_SRC
machine cloud.jaynam.me:433 port https login ymajan password app-password
#+END_SRC

This should be stored in an encrypted ~.authinfo.gpg~ file which is referenced in the Doom Emacs configuration.

## Homebrew Packages

While not explicitly listed in the repository, based on the configuration, you may want to install these Homebrew packages:

#+BEGIN_SRC shell
# Core development tools
brew install git ripgrep fd direnv

# Python support
brew install python

# Emacs support packages
brew install plantuml graphviz gnuplot

# Guile development
brew install guile
#+END_SRC